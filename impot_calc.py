import streamlit as st
from paie_app import analyse_bulletins
from ep5_app import analyse_missions
from attestation_app import analyse_attestation_nuitees

# Configuration de la page
st.set_page_config(
    page_title="Imp√¥t Calc ‚ú®",
    page_icon="‚úàÔ∏è", # Chang√© pour un emoji plus pertinent
    layout="wide",
    initial_sidebar_state="collapsed" # On n'utilise plus la sidebar
)

# --- Initialisation de l'√©tat de la session ---
if 'menu_actif' not in st.session_state:
    st.session_state.menu_actif = None # 'paie', 'ep5', 'attestation'

# --- Fonctions pour changer le menu actif ---
def activer_menu(menu):
    st.session_state.menu_actif = menu

# --- PAGE PRINCIPALE ---
st.title("üìä Assistant de Comptabilit√© de Vol")
st.markdown("---")

# Cr√©er deux colonnes principales
col_gauche, col_droite = st.columns([1, 2]) # Colonne de gauche plus petite

# --- COLONNE DE GAUCHE (Contr√¥les) ---
with col_gauche:
    st.header("üóÇÔ∏è Analyses Disponibles")
    st.write("Cliquez sur une analyse pour t√©l√©verser les fichiers correspondants.")
    
    # Boutons pour choisir l'analyse
    st.button("üíµ Analyse des Bulletins de Paie", on_click=activer_menu, args=('paie',), use_container_width=True)
    st.button("‚úàÔ∏è Analyse des Rotations (EP5)", on_click=activer_menu, args=('ep5',), use_container_width=True)
    st.button("üè† Analyse Attestation Nuit√©es", on_click=activer_menu, args=('attestation',), use_container_width=True)

    st.markdown("---")

    # Afficher l'uploader de fichiers en fonction du menu actif
    fichiers_analyses = None
    if st.session_state.menu_actif == 'paie':
        with st.container(border=True): # Encadrer l'uploader pour le mettre en valeur
            st.subheader("T√©l√©verser Bulletins de Paie")
            fichiers_analyses = st.file_uploader(
                "S√©lectionnez vos fichiers PDF de paie :", type="pdf",
                accept_multiple_files=True, key="paie_uploader"
            )
            
    elif st.session_state.menu_actif == 'ep5':
        with st.container(border=True):
            st.subheader("T√©l√©verser Fichiers EP5")
            fichiers_analyses = st.file_uploader(
                "S√©lectionnez vos fichiers PDF EP4/EP5 :", type="pdf",
                accept_multiple_files=True, key="ep5_uploader"
            )

    elif st.session_state.menu_actif == 'attestation':
        with st.container(border=True):
            st.subheader("T√©l√©verser Attestations")
            fichiers_analyses = st.file_uploader(
                "S√©lectionnez les PDF contenant les attestations annuelles (g√©n√©ralement F√©vrier) :", type="pdf",
                accept_multiple_files=True, key="attestation_uploader"
            )

# --- COLONNE DE DROITE (R√©sultats) ---
with col_droite:
    st.header("üìà R√©sultats de l'Analyse")

    # Initialiser les conteneurs pour les r√©sultats
    # Cela permet de les afficher m√™me si l'analyse d'un autre type est lanc√©e apr√®s
    if 'resultats_paie' not in st.session_state:
        st.session_state.resultats_paie = None
    if 'resultats_ep5' not in st.session_state:
        st.session_state.resultats_ep5 = None
    
    # Lancer l'analyse si des fichiers ont √©t√© t√©l√©vers√©s
    if fichiers_analyses:
        with st.spinner(f"Analyse de {len(fichiers_analyses)} fichier(s) en cours... ‚è≥"):
            if st.session_state.menu_actif == 'paie':
                # Stocker le r√©sultat retourn√©
                st.session_state.resultats_paie = analyse_bulletins(fichiers_analyses)
            elif st.session_state.menu_actif == 'ep5':
                # analyse_missions affiche d√©j√† tout, donc pas besoin de stocker un retour pour l'instant
                analyse_missions(fichiers_analyses)
                st.balloons()
            elif st.session_state.menu_actif == 'attestation':
                # La fonction analyse_attestation_nuitees affiche directement les r√©sultats,
                # on pourrait la modifier pour qu'elle retourne les donn√©es si on veut les stocker aussi
                analyse_attestation_nuitees(fichiers_analyses)

    # Afficher les r√©sultats stock√©s
    if st.session_state.resultats_paie:
        # Cet affichage est maintenant dans impot_calc.py au lieu de paie_app.py
        # Il sera dans la colonne de droite comme vous le vouliez.
        with col_droite: # En supposant que vous avez d√©fini col_gauche, col_droite
             with st.container(border=True):
                st.subheader("üíµ Total des Indemnit√©s (Paie)")
                total_paie = st.session_state.resultats_paie.get("total_general", 0.0)
                st.metric("Total g√©n√©ral extrait des bulletins", f"{total_paie:.2f} ‚Ç¨")
                with st.expander("Voir le d√©tail des totaux par cat√©gorie"):
                    for cle, montant in st.session_state.resultats_paie.get("totaux_par_cle", {}).items():
                        st.write(f"{cle}: {montant:.2f} ‚Ç¨")
            
    if st.session_state.resultats_ep5:
        with st.container(border=True):
            st.subheader("‚úàÔ∏è Tableau des Rotations")
            # La fonction analyse_missions affiche d√©j√† le tableau et les stats.
            # Elle n'a pas besoin de retourner quoi que ce soit si elle affiche elle-m√™me ses r√©sultats.
            # La logique d'affichage est d√©j√† dans ep5_app.py
            pass # L'affichage est d√©j√† g√©r√© par l'appel √† analyse_missions

    if not st.session_state.resultats_paie and not st.session_state.resultats_ep5:
        if st.session_state.menu_actif:
            st.info("Les r√©sultats s'afficheront ici apr√®s l'analyse des fichiers t√©l√©vers√©s.")
        else:
            st.info("Veuillez choisir une analyse et t√©l√©verser des fichiers.")
